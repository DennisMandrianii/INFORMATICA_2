/***********************
Dennis Mandriani       *       
4H                     *
20/09/2022             *
***********************/

#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <time.h>

#define N 5
#define R 5
#define C 5
#define MAX 20
#define MIN 5

void caricaRandomVettore(int [], int);
void caricaRandomMatrice(int [][C], int, int);
void caricaTastira(int [], int);
void caricaTastiraMatrice(int [][C], int, int);
void Stampa(int [], int);
void StampaMatrice(int [][C], int, int);
void OrdinamentoBubbleSort(int [], int);
void RicercaIngenua(int [], int);
int MaggioreMatrice(int [][C], int, int);
int MinoreMatrice(int [][C], int, int);

int main()
{
	int vettore[N];
	int matrice[R][C];
	int risultato;
	
	srand(time(NULL));
	
	caricaRandomMatrice(matrice, R, C);
	StampaMatrice(matrice, R, C);
	
	printf("\n");
	
	caricaTastieraMatrice(matrice, R, C);
	StampaMatrice(matrice, R, C);
	
	printf("\n");
	
	OrdinamentoBubbleSort(vettore, N);
	Stampa(vettore, N);
	
	printf("\n");
	
	RicercaIngenua(vettore, N);
	Stampa(vettore, N);
	
	printf("\n");
	
	risultato = MaggioreMatrice(matrice, R, C);
	printf("%d", risultato);
	
	printf("\n");
	
	risultato = MinoreMatrice(matrice, R, C);
	printf("%d", risultato);
	
	return 0;
}

void caricaRandomVettore(int v[], int x)  // x = dimensione
{
	int i;
	
//	srand(time(NULL));
	
	for(i = 0; i < x; i++)
	{
		v[i] = rand()%(MAX - MIN + 1)+ MIN;
	}
}

void caricaRandomMatrice(int m[][C], int righe, int colonne)
{
	int i;
	
	for(i = 0; i < colonne; i++)
	{
		caricaRandomVettore(m[i], colonne);
	}
}

void caricaTastira(int v[], int x)
{
	int i;
	
	printf("Inserisci dei numeri:\n");
	for(i = 0; i < x; i++)
	{
		scanf("%d", &v[i]);	
	}
}

void caricaTastiraMatrice(int m[][C], int righe, int colonne)
{
	int i;
	
	for(i = 0; i < colonne; i++)
	{
		caricaTastiera(m[i], colonne);
	}
}

void Stampa(int v[], int x)
{
	int i;
	
	for(i = 0; i < x; i++)
	{
		printf("%d", v[i]);
	}
}

void StampaMatrice(int m[][C], int righe, int colonne)
{
	int i;
	
	for(i = 0; i < colonne; i++)
	{
		Stampa(m[i], colonne);
	}
}

void OrdinamentoBubbleSort(int v[], int x)
{
	int appoggio = 0, scambio, i;
	
	do{
		
		scambio = 0;
		
		for(i = 0; i < x - 1; i++)
		{
			if(v[i] > v[i + 1])
			{
				appoggio = v[i];
				v[i] = v[i + 1];
				v[i + 1] = appoggio;
				scambio = 1;
			}
			
		}
		
	  }while(scambio == 1);
}

void RicercaIngenua(int v[], int x)
{
	int indice = -1, i;
	
	for(i = 0; i < x; i++)
	{
		
		if(v[i] == x)
		indice = i;
		
	}return indice;
}

int MaggioreMatrice(int m[][C], int righe, int colonne)
{
	int i, j, m = INT_MIN;
	
	for(i = 0; i < righe; i++)
	for(j = 0; j < colonne; j++)
	{	
	
		if(m[i][j] > m)
		{
			m = m[i][j];
		}
		
	}return m;
}

int MinoreMatrice(int m[][C], int righe, int colonne)
{
	int i, j, m = INT_MAX;
	
	for(i = 0; i < righe; i++)
	for(j = 0; j < colonne; j++)
	{	
	
		if(m[i][j] > m)
		{
			m = m[i][j];
		}
		
	}return m;
	
}
